service: h2i-api
useDotenv: true
plugins:
  - serverless-webpack
  - serverless-offline

custom:
  customDomain:
    domainName: api.html2.io
    certificateName: "api.html2.io"
    basePath: ""
    createRoute53Record: false
    stage: production
    # enabled only for production - configured by package.json script with --domain flag.
    enabled: ${param:domain, false}
  sesTemplates:
    addStage: true
  serverless-offline:
    httpPort: 4026
    lambdaPort: 3026
    noPrependStageInUrl: true
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-1
  timeout: 300
  environment:
    STAGE: ${opt:stage, self:provider.stage}
    BUCKET: h2i-cdn
  apiGateway:
    # https://stackoverflow.com/questions/61003311/serverless-i-image-upload-to-s3-broken-after-deploy-local-worked-only/61003498#61003498
    binaryMediaTypes:
      - "*/*"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:provider.environment.BUCKET}/*"

functions:
  main:
    handler: index.handler
    memorySize: 1536
    timeout: 30
    events:
      - http:
          method: any
          path: /{proxy+}
          cors:
            origin: "*"
      - http:
          method: get
          path: /
          cors:
            origin: "*"
    layers:
      - !Ref ChromiumLambdaLayer

layers:
  chromium:
    package:
      artifact: ./bin/chromium.zip

package:
  individually: true
